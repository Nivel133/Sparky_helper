from aiogram import Bot
from aiogram.types import Message, ReplyKeyboardRemove, CallbackQuery
from aiogram.fsm.context import FSMContext
from core.utils.states_schedule import StepsGetSchedule
from core.utils.utils import get_column_for_class, get_day_of_week_row, get_schedule
from core.keyboards.kb import keyboard_days_of_week, ikb_confirm_schedule, keyboard_main_menu, keyboard_yes_no
import emoji
from core.handlers import text


async def start(message: Message):
    await message.answer(text.get_start_text(message.from_user.first_name), reply_markup=keyboard_main_menu)


async def get_schedule_form(message: Message, state: FSMContext):
    await message.answer(f'{message.from_user.first_name}, –í—ã–±–µ—Ä–∏ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏: ' + emoji.emojize(":brain:"),
                         reply_markup=keyboard_days_of_week)
    await state.set_state(StepsGetSchedule.GET_DAY)


async def get_day(message: Message, state: FSMContext):
    await message.answer(f'{message.from_user.first_name}, {text.get_day_text}')
                         # reply_markup=ReplyKeyboardRemove())
    await state.update_data(day=message.text)
    await state.update_data(user_id=message.from_user.id)
    await state.set_state(StepsGetSchedule.GET_NUM_AND_LETTER)



async def get_num_and_letter(message: Message, state: FSMContext):
    context_data = await state.get_data()
    await state.update_data(num_and_letter=message.text)
    await message.answer(f'–¢—ã –≤—ã–±—Ä–∞–ª –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏:\r\n{context_data.get("day")}\r\n'
                         f'–¢—ã –≤—ã–±—Ä–∞–ª –±—É–∫–≤—É –∏ –Ω–æ–º–µ—Ä –∫–ª–∞—Å—Å–∞: \r\n{message.text}\r\n',
                         reply_markup=keyboard_yes_no)
    await state.set_state(StepsGetSchedule.GET_SCHEDULE)
    # –ó–¥–µ—Å—å –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–∞—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ –∞–Ω–∫–µ—Ç—ã

# async def get_yes(message: Message, state: FSMContext):
#     context_data = await state.get_data()
#     await message.answer(f'–ò—â—É —Ç–≤–æ—ë —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ')
#     await state.set_state(StepsGetSchedule.GET_SCHEDULE)
#
# async def get_no(message: Message, state: FSMContext):
#     context_data = await state.get_data()
#     await message.answer(f'–î–∞–≤–∞–π –ø–æ–ø—Ä–æ–±—É–µ–º —Å–Ω–æ–≤–∞!\n'
#                          f'–í—ã–±–µ—Ä–∏ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏!', reply_markup=keyboard_days_of_week)
#     await state.set_state(StepsGetSchedule.GET_DAY)

# async def get_yes(call: CallbackQuery, state: FSMContext, bot: Bot):
#     print(call)
#     await state.set_state(StepsGetSchedule.GET_SCHEDULE)
#     # await call.answer()
#
#
async def get_no(message: Message, state: FSMContext):
    print('—è –æ—Ç—Ä–∞–±–æ—Ç–∞–ª–∞')
    # context_data = await state.get_data()
    # print(context_data)
    await message.answer(f'—á—Ç–æ-—Ç–æ', reply_markup=keyboard_days_of_week)
    await state.clear()
    await state.set_state(StepsGetSchedule.GET_DAY)

async def get_schedule_from_sparky(message: Message, state: FSMContext):
    context_data = await state.get_data()
    print(context_data)
    # await message.answer(f'–°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ –º–∞—à–∏–Ω–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π:\r\n{str(context_data)}')
    day_of_week = str(context_data.get('day'))
    num_and_letter = str(context_data.get('num_and_letter'))
    #–ü–æ–ª—É—á–∞–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
    list_of_lessons, list_of_rooms = get_schedule(get_column_for_class(num_and_letter), get_day_of_week_row(day_of_week))

    #–ü–æ—è—Å–Ω–µ–Ω–∏–µ –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –º–∞–ø –∏ –¥–∂–æ–∏–Ω
    lessons_string = ''
    for lesson, room in zip(list_of_lessons, list_of_rooms):
        lessons_string += 'üìç'
        lessons_string += str(lesson)
        lessons_string += 'üìç'
        lessons_string += ' –ö–ê–ë '
        lessons_string += str(room)
        lessons_string += '\n '
    print(lessons_string)

    # lessons_string = '\n'.join(map(str, list_of_lessons)) #–ó–¥–µ—Å—å –º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –º–µ—Ç–æ–¥ –¥–∂–æ–∏–Ω –∏ –º–∞–ø –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–ø–∏—Å–∫–∞ –≤ —É–¥–æ–±–Ω—É—é –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å—Ç—Ä–æ–∫—É

    data_user = f'–í–æ—Ç —Ç–≤–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ \r\n' \
                f'–í—ã–±—Ä–∞–Ω–Ω—ã–π –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏: {day_of_week}\r\n' \
                f'–í—ã–±—Ä–∞–Ω–Ω—ã–π –∫–ª–∞—Å—Å: {num_and_letter}\r\n' \

    await message.answer(data_user, reply_markup=keyboard_main_menu)
    await message.answer(lessons_string)

    await state.clear()



async def get_no(message: Message, state: FSMContext):
    await state.clear()

